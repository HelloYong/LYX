public String fractionToDecimal(int numerator, int denominator) {
        if(denominator == 0)
            return "NaN";
        if(numerator == 0)
            return "0";
        StringBuilder sb = new StringBuilder();
        Long n = new Long(numerator);
        Long d = new Long(denominator);
        if(n*d < 0)
            sb.append("-");
        n = Math.abs(n);
        d = Math.abs(d);
        HashMap<Long,Integer> map = new HashMap<Long,Integer>();
        sb.append(n / d);
        if(n % d == 0)
            return sb.toString();
        else
            sb.append(".");
        Long mod = n % d;
        while(mod > 0) {
            if(map.containsKey(mod)) {
                sb.insert(map.get(mod),"(");    
                sb.append(")");
                break;
            }
            map.put(mod,sb.length());
            mod *= 10;
            sb.append(mod/d);
            mod = mod % d;
        }
        return sb.toString();
    }

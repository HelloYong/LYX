//Two solutions
//The first one is using if continue to loop, the second is use while to loop.
// How to judge whether a character is letter or digit
// How to judge whether two characters are some
public boolean isPalindrome(String s) { 
        if(s == null || s.length() == 0)
            return true;
        int left = 0, right = s.length() - 1;
        while(left < right) {
            if(!isValid(s.charAt(left))) {
                left++;
                continue;
            }
            if(!isValid(s.charAt(right))) {
                right--;
                continue;
            }
            if(!isSame(s.charAt(left), s.charAt(right))) {
                return false;
            }else {
                left++;
                right--;
            }
        }
        return true;
    }
    
    public boolean isValid(char c) {
        if((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9'))
            return true;
        return false;
    }
    
    public boolean isSame(char a, char b) {
        if(a >= 'A' && a <= 'Z')
            a = (char)(a - 'A' + 'a');
        if(b >= 'A' && b <= 'Z')
            b = (char)(b - 'A' + 'a');
        return a == b;
    }
    
    public boolean isPalindrome(String s) {  
        if(s == null || s.length() <= 0)
            return true;
        int left = 0, right = s.length() - 1;
        while(left < right) {
            while(left < right && !Character.isLetterOrDigit(s.charAt(left))) {
                left++;
            }
            while(left < right && !Character.isLetterOrDigit(s.charAt(right))) {
                right--;
            }
            if(left < right && Character.toLowerCase(s.charAt(left)) != Character.toLowerCase(s.charAt(right))) {
                return false;
            }else {
                left++;
                right--;
            }
        }
        return true;
    }

  // Notice that strs[i] == null is possible.
  // 
  public String longestCommonPrefix(String[] strs) { 
        if(strs == null || strs.length == 0)
            return "";
        StringBuilder sb = new StringBuilder();
        boolean flag = true;
        int index = 0;
        while(flag) {
            for(int i=0;i<strs.length;i++) {
                if(strs[i] == null || strs[i].length() <= index || strs[i].charAt(index) != strs[0].charAt(index)) {
                    flag = false;
                    break;
                }
            }
            if(flag)
                sb.append(strs[0].charAt(index));
            index++;
        }
        return sb.toString();
    }
    
    
  public String longestCommonPrefix(String[] strs) { 
        if(strs == null || strs.length == 0)
            return "";
        String common = strs[0];
        for(int i=1;i<strs.length;i++) {
            common = commonString(common,strs[i]);
        }
        return common;
    }
    
    public String commonString(String str1, String str2) {
        if(str1 == null || str2 == null || str2.length() == 0 || str1.length() == 0)
            return "";
        int index = 0;
        while(index < str1.length() && index < str2.length() && str1.charAt(index) == str2.charAt(index)){
            index++;
        }
        return str1.substring(0,index);
    }

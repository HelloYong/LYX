// Binary tree pre-order travel through DFS.
/*  class TreeNode {
*     int val;
*     TreeNode left;
*     TreeNode right;
*     public TreeNode(int a) {val = a;}
*   }
*
*
*/
public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> list = new ArrayList<Integer>();
        if(root == null)
            return list;
        Stack<TreeNode> stack = new Stack<TreeNode>();
        TreeNode cur = root;
        while(cur != null || !stack.isEmpty()) {
            if(cur != null) {
                list.add(cur.val);
                stack.push(cur);
                cur = cur.left;
            }else {
                cur = stack.pop();
                cur = cur.right;
            }
        }
        return list;
    }

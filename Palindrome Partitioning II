//The thought come from longest palindrome substring and word break(DP).
public int minCut(String s) {
        if(s == null || s.length() <= 1)
            return 0;
        int min = Integer.MAX_VALUE;
        int [] res = new int[s.length()+1];
        res[0] = 0;
        boolean [][] dict = dict(s);
        for(int i=0;i<s.length();i++) {
            res[i+1] = i+1;
            for(int j=0;j<=i;j++) {
                if(dict[j][i]) {
                    res[i+1] = Math.min(res[i+1],res[j]+1);
                }
            }
        }
        return res[res.length-1]-1;
    }
    
    private boolean [][] dict(String s) {
        boolean [][] res = new boolean[s.length()][s.length()];
        for(int i=s.length()-1;i>=0;i--) {
            for(int j=i;j<s.length();j++) {
                if(s.charAt(i) == s.charAt(j) && (j-i<2 || res[i+1][j-1])) {
                    res[i][j] = true;
                }
            }
        }
        return res;
    }

/*
	 * Given a string S, find the length of the longest substring T that contains at most two distinct characters.
	 * For example,
	 * Given S = “eceba”
	 * T is “ece” which its length is 3
	 * */
	public int lengthOfLongestSubstringWithTwoDistinct(String s) {
		if(s == null || s.length() == 0)
			return 0;
		int left = 0, count = 0, max = 0;
		HashMap<Character,Integer> map = new HashMap<Character,Integer>();
		for(int i=0;i<s.length();i++) {
			if(map.containsKey(s.charAt(i))) {
				map.put(s.charAt(i),map.get(s.charAt(i)) + 1);
			}else {
				while(count == 2) {
					if(map.get(s.charAt(left)) == 1) {
						map.remove(s.charAt(left));
						count--;
					}else {
						map.put(s.charAt(left), map.get(s.charAt(left)) - 1);
					}
					left++;
				}
				map.put(s.charAt(i),1);
				count++;
			}
			max = Math.max(max, i - left + 1);
		}
		return max;
	}

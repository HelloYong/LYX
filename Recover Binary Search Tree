//Still make use of the property that the inorder sequence is ascending.
public void recoverTree(TreeNode root) {
        if(root == null)
            return;
        ArrayList<TreeNode> pre = new ArrayList<TreeNode>();
        pre.add(null);
        ArrayList<TreeNode> res = new ArrayList<TreeNode>();
        helper(root,pre,res);
        int tmp = res.get(0).val;
        res.get(0).val = res.get(1).val;
        res.get(1).val = tmp;
    }
    
    public void helper(TreeNode root, ArrayList<TreeNode> pre, ArrayList<TreeNode> res) {
        if(root == null)
            return;
        helper(root.left,pre,res);
        if(pre.get(0)!=null && pre.get(0).val > root.val) {
            if(res.size() == 0) {
                res.add(pre.get(0));
                res.add(root);
            }else {
                res.set(1,root);
            }
        }
        pre.set(0,root);
        helper(root.right,pre,res);
    }
